package components

import (
	"go-chat/app/helpers"
	"go-chat/app/types"
)

templ Sidebar(viewUsers types.UserView) {
	<header
		x-data="{ open: false }"
		class="flex flex-col w-1/3 h-svh absolute left-0 top-0 border-r-[0.5px] border-primary bg-background overflow-hidden z-0"
	>
		@Topbar()
		@Search()
		@FriendsCanvas(viewUsers.AvailableUsers)
		@Chats(viewUsers.ChatViews)
	</header>
}

templ Topbar() {
	<nav class="flex flex-row justify-between items-center h-24 py-3 px-16 w-full bg-secondary">
		<div>
			<img
				src="/app/assets/img/profile.jpeg"
				alt="profile-img"
				class="rounded-full border-[2px] border-primary object-cover w-16"
			/>
		</div>
		<div class="grid grid-cols-4 gap-5">
			<i class="fa-solid fa-people-group text-secondary-foreground text-lg" role="button"></i>
			<i class="fa-brands fa-rocketchat text-secondary-foreground text-lg" role="button"></i>
			<button @click="open = ! open">
				<i class="fa-regular fa-square-plus text-secondary-foreground text-lg"></i>
			</button>
			<button>
				<i class="fa-solid fa-ellipsis-vertical text-secondary-foreground text-lg"></i>
			</button>
		</div>
	</nav>
}

templ Search() {
	<div class="px-12 py-4 w-full border-b-[0.5px] border-primary">
		<div class="flex items-center justify-between bg-secondary h-9 px-2 rounded-lg">
			<input
				type="text"
				placeholder="Search"
				class="w-3/4 bg-transparent border-none text-sm font-medium focus:outline-none text-secondary-foreground"
			/>
			<i class="fa-solid fa-search text-secondary-foreground text-lg"></i>
		</div>
	</div>
}

templ Chats(chatViews []types.ChatView) {
	<div class="flex flex-col gap-3 items-start ml-3 overflow-y-scroll h-full">
		for _,chatView := range chatViews {
			<div
				class="flex flex-row items-center gap-6 px-12 py-4 w-full border-b border-primary"
				hx-post="chat"
				hx-trigger="click"
				hx-vals={ helpers.ReturnIdAsJsonFromUint(chatView.User.ID) }
				hx-swap="innerHTML"
				hx-target="#chat"
				role="button"
			>
				<div class="rounded-full bg-secondary w-12 h-12 flex items-center justify-center">
					<i class="fa-regular fa-user text-secondary-foreground text-xl"></i>
				</div>
				<div class="flex flex-col gap-1">
					<p class="font-base text-primary-foreground">{ chatView.User.Username }</p>
					if chatView.LastMessage.Content != "" {
						<p class="text-sm text-muted-foreground">{ chatView.LastMessage.Content }</p>
					} else {
						<p class="text-sm text-muted-foreground">Write a Message</p>
					}
				</div>
			</div>
		}
	</div>
}

templ FriendsCanvas(available_users []types.User) {
	<div
		x-show="open"
		class="absolute left-0 top-0 z-10 flex flex-col h-svh overflow-hidden w-full bg-secondary"
		x-transition:enter="transition-transform transition-opacity ease-in-out duration-300"
		x-transition:enter-start="transform translate-x-full"
		x-transition:enter-end="transform translate-x-0"
		x-transition:leave="transition-transform transition-opacity ease-in-out duration-300"
		x-transition:leave-start="transform translate-x-0"
		x-transition:leave-end="transform translate-x-full"
	>
		<div class="flex flex-row bg-accent h-24 items-center justify-between px-12">
			<button @click="open = ! open">
				<i class="fa-solid fa-arrow-left-long text-lg"></i>
			</button>
			<p class="text-lg font-semibold text-accent-foreground">Search For Friends</p>
		</div>
		@Search()
		@FriendList(available_users)
	</div>
}

templ FriendList(available_users []types.User) {
	<div class="flex flex-col gap-3 mt-3 rounded-lg" id="friends-list">
		for _,users := range available_users {
			<div
				class="flex flex-row justify-between items-center mx-3 px-3 py-3 bg-background transition-opacity duration-1000 ease-in-out opacity-0 animate-fade-in"
			>
				<img
					src="/app/assets/img/profile.jpg"
					alt="profile-img"
					class="rounded-full border-[2px] border-primary object-cover w-12"
				/>
				<div class="flex items-center gap-2">
					<div class="flex flex-col ml-3 w-32">
						<p class="text-lg font-base text-primary-foreground">{ users.Username }</p>
						<p class="text-sm text-muted-foreground">{ users.Phone }</p>
					</div>
					<div
						class="w-9 h-9 rounded-lg bg-accent text-accent-foreground flex items-center justify-center"
						role="button"
						data-id={ helpers.ReturnIdAsStringFromUint(users.ID) }
						hx-post="/add-friends"
						hx-vals={ helpers.ReturnIdAsJsonFromUint(users.ID) }
						hx-target="#friends-list"
					>
						<i class="fa-solid fa-user-plus"></i>
					</div>
				</div>
			</div>
		}
	</div>
}
